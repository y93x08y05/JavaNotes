package com.jack.nowcoder.spring.Alibaba.Ali20180511Java;

/**
 * 在自动化仓库中有若干障碍物，机器人需要从起点出发绕过这些障碍物到终点搬
 * 取货柜，现试求机器人从起点运动到终点用时最短的路径。已知机器人只能沿着
 * 东西方向或南北方向移动，移动的速度为1m/s，机器人每转向90度需要花费1s。
 * 输入：
 * 第一行：起点位置坐标及机器人方向，如：1 0 EAST
 * 代表机器人初始坐标位置为x=1;y=0;机器人面朝东方
 * 第二行：终点位置及机器人朝向，如：0 2 WEST
 * 代表机器人需要移动至x=0;y=2;且面朝西方；
 * 接下来输入的是地图；
 * 首先是两个数字r,c，代表地图数据的行和列，如：
 * 2 3
 * 0 1 0
 * 0 0 0
 * 其中，左上角为坐标原点，从左到右为x轴增大的方向是东方，从上到下为y轴
 * 增大的方向是南方，地图中1代表有障碍物，机器人不能前往，0代表无障碍物
 * 机器人可以前往，地图中相邻的每两个点之间的距离是1m。
 * 0<=l,w<=128
 * 输出：
 * 机器人从起点移动到终点所需要的最短秒数，当不可达输出65535
 * 输出范例：
 * 0 0 NORTH
 * 2 0 SOUTH
 * 2 3
 * 0 1 0
 * 0 0 0
 * 输出范例：
 * 0 0 NORTH
 * 1 1 SOUTH
 * 2 2
 * 0 1
 * 0 0
 */
public class Java2 {
    public static void main(String [] args){
        System.out.println();
    }
}